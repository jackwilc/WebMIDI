{
  "name": "midi-help",
  "description": "Companion to npm midi package",
  "version": "0.2.1",
  "homepage": "https://github.com/charlesholbrow/midi-help",
  "author": {
    "name": "Charles Holbrow",
    "email": "charlesholbrow@gmail.com",
    "url": "www.CharlesHolbrow.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/charlesholbrow/midi-help.git"
  },
  "bugs": {
    "url": "https://github.com/charlesholbrow/midi-help/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/charlesholbrow/midi-help/blob/master/LICENSE-MIT"
    }
  ],
  "main": "out/lib/midi-help.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test",
    "prepublish": "grunt compile"
  },
  "dependencies": {},
  "devDependencies": {
    "grunt-contrib-watch": "~0.5.0",
    "grunt-contrib-coffee": "~0.7.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-coffeelint": "~0.0.7",
    "grunt-simple-mocha": "~0.4.0",
    "should": "~1.2.2",
    "mocha-cakes": "~0.9.0",
    "grunt": "~0.4.1"
  },
  "keywords": [
    "midi, music"
  ],
  "readme": "# midi-help\n\nCompanion to [npm midi package](https://npmjs.org/package/midi)\n\n## Getting Started\nInstall the module with: `$ npm install midi-help`\n\nSending MIDI\n```javascript\nvar help = require('midi-help');\nvar midi = require('midi');\nvar output = new midi.output();\n\noutput.openPort(0);\noutput.sendMessage(help.noteOn(60, 127)); // note=50, vel=127, channel=0\noutput.sendMessage(help.noteOff(53, 80, 3)); // note=53, vel=80, channel=3\noutput.sendMessage(help.pitchBend(8192, 0)); // pitchbend centered, channel=0\noutput.sendMessage(help.cc(123, 0)); // all notes off/continuous control 123\n```\n\nListening for MIDI\n```javascript\ninput = new midi.input();\nparser = new help.MidiParser();\n\ninput.on('message', function(deltaTime, message) {\n  parser.parseArray(message);\n});\n\nconsole.log('Opening port:', input.getPortName(0));\ninput.openPort(0);\n\nparser.on('noteOn', function(note, velocity, channel){\n  console.log('noteOn:', note, velocity, channel);\n});\n\nparser.on('noteOff', function(note, velocity, channel){\n  console.log('noteOff:', note, velocity, channel);\n});\n// parser.on 'pitchBend', 'cc', 'clock', etc...\n```\n## Documentation\nSupported messages:\n\n- noteOn\n- noteOff\n- pitchBend\n- cc\n- clock\n- start\n- songPosition\n- channelPressure\n\nUse these messages for input and output. See examples above for more detail.\n```javascript\n// input\nparser.on('clock', function(){\n  console.log('24 of these per quarter note :P');\n});\n\n// output\nvar pressure = 127;\nvar channel = 0\noutput.sendMessage(help.channelPressure(pressure, channel));\n```\n\n\n## Notes\nUnsupported messages are ignored. SysEx is currently broken (by default, the npm midi module suppresses SysEx messages).\n\nThere is no input checking -- if you use crazy values like `help.noteOn(240)` you will get invalid or incorrect midi messages.\n\n## Examples\n_(Coming soon)_\n\n## Contributing\nAdding new midi types is super easy -- just one line of code gets you input and output. See how it's done [here](https://github.com/CharlesHolbrow/midi-help/blob/e0d7600ee4ac7bd19d7446300c0ac8530371482c/src/lib/midi-types.coffee#L32-L45)\n\n## Release History\n\n- 0.2.0 Add 'stop' and 'continue' midi message support\n- 0.1.5 Remove unused dependency on npm midi\n- 0.1.3 Fis bug introduced after renaming MidiParser\n- 0.1.1 Add this handy README\n- 0.1.0 initial\n\n## License\nCopyright (c) 2013 Charles Holbrow  \nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "midi-help@0.2.1",
  "dist": {
    "shasum": "93d1abec7ed31db0778cdae67114a210fb467ae2"
  },
  "_from": "midi-help@",
  "_resolved": "https://registry.npmjs.org/midi-help/-/midi-help-0.2.1.tgz"
}
